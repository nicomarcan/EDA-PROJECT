import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

public class AirportManager {
	private Map<String,Node> airports = new HashMap<String,Node>();

	public void addAirport(Airport airport){
		if(!airports.containsKey(airport.getName())){
			airports.put(airport.getName(),new Node(airport));
		}
	}
	
	public void deleteAirport(String name){
		if(airports.containsKey(name)){
			airports.remove(name);
		}
	}
	
	public void addAirports(List<Airport> airports){
		for(Airport a : airports){
			addAirport(a);
		}
	}

	public void deleteAirports(List<String> airports){
		for(String s : airports){
			deleteAirport(s);
		}
	}
	
	public void addFlight(Flight f){
		if(!airports.containsKey(f.origin) || ! airports.containsKey(f.target))
			return;
		addToPriceOrder(f,airports.get(f.origin).priceOrder);
		addToTimeOrder(f,airports.get(f.target).timeOrder);
	}
	




	private void addToPriceOrder(Flight f, List<Flight> priceOrder) {
		// TODO Auto-generated method stub
		
	}

	private void addToTimeOrder(Flight f, List<Flight> timeOrder) {
		// TODO Auto-generated method stub
		
	}





	private static class Node{
		Airport airport;
		Set<Flight> priceOrder = new TreeSet<Flight>();
		Set<Flight> timeOrder = new TreeSet<Flight>();
		public boolean visited;
		
		public Node(Airport airport) {
			super();
			this.airport = airport;
		}
		
		
	}
	
	
	private static class Flight{
		private String Airline;
		private int flightNumber;
		private Day[] days;
		private Airport target;
		private int price;
		private int flightTime;
		private int departureTime;
		private Airport origin;
		
		public Flight(String airline, int flightNumber, Day[] days, Airport target, int price, int flightTime,
				int departureTime, Airport origin) {
			super();
			Airline = airline;
			this.flightNumber = flightNumber;
			this.days = days;
			this.target = target;
			this.price = price;
			this.flightTime = flightTime;
			this.departureTime = departureTime;
			this.origin = origin;
		}
		
	
		
		
	}
	 
}
