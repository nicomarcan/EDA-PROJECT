package TPE;

import java.util.Comparator;
import java.util.HashMap;
import java.util.PriorityQueue;

public class test {
	public static void main(String[] args) {	
		AVL<Integer> avl = new AVL<Integer>(new Comparator<Integer>(){

			@Override
			public int compare(Integer arg0, Integer arg1) {
				return arg0.compareTo(arg1);
			}
			
		});
		PriorityQueue<Integer> pq = new PriorityQueue<>();
		HashMap<Integer,Integer> m = new HashMap<Integer,Integer>();
		Long initial = System.currentTimeMillis();
		for(int i = 0;i < 2000000;i++){
			pq.offer(i);
		}
		Long finalT = System.currentTimeMillis();
		System.out.println(finalT-initial);
		initial = System.currentTimeMillis();
		for(int j = 0;j<2000000;j++){
			m.put(j,j);
		}
		finalT = System.currentTimeMillis();
		System.out.println(finalT-initial);
		initial = System.currentTimeMillis();
		for(int j = 0;j<2000000;j++){
			avl.insert(j);
		}
		finalT = System.currentTimeMillis();
		System.out.println(finalT-initial);
		initial = System.currentTimeMillis();
		for(int j = 0;j<2000000;j++){
			m.remove(j);
		}
		finalT = System.currentTimeMillis();
		System.out.println(finalT-initial);

	}
}
